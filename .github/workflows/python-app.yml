# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# This workflow installs Python dependencies, runs the Flask server, and ensures it is running correctly.

name: Python Flask Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4  # Check out the repository

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest  # Linting and testing tools
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # Lint the code with flake8 to check for Python errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # This treats all errors as warnings (you can remove --exit-zero to fail on errors)
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run Flask app
      run: |
        nohup make run &  # Run Flask server in the background
        sleep 10  # Wait for the server to start

    - name: Test server availability
      run: |
        curl --fail http://localhost:3000 || exit 1
